// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sort.proto

/*
Package sort is a generated protocol buffer package.

It is generated from these files:
	sort.proto

It has these top-level messages:
	InputArray
	OutputArray
*/
package sort

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InputArray struct {
	Input []int32 `protobuf:"varint,1,rep,packed,name=input" json:"input,omitempty"`
}

func (m *InputArray) Reset()                    { *m = InputArray{} }
func (m *InputArray) String() string            { return proto.CompactTextString(m) }
func (*InputArray) ProtoMessage()               {}
func (*InputArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InputArray) GetInput() []int32 {
	if m != nil {
		return m.Input
	}
	return nil
}

type OutputArray struct {
	Output []int32 `protobuf:"varint,2,rep,packed,name=output" json:"output,omitempty"`
}

func (m *OutputArray) Reset()                    { *m = OutputArray{} }
func (m *OutputArray) String() string            { return proto.CompactTextString(m) }
func (*OutputArray) ProtoMessage()               {}
func (*OutputArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OutputArray) GetOutput() []int32 {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*InputArray)(nil), "InputArray")
	proto.RegisterType((*OutputArray)(nil), "OutputArray")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Sort service

type SortClient interface {
	InsertionSort(ctx context.Context, in *InputArray, opts ...client.CallOption) (*OutputArray, error)
	SelectionSort(ctx context.Context, in *InputArray, opts ...client.CallOption) (*OutputArray, error)
}

type sortClient struct {
	c           client.Client
	serviceName string
}

func NewSortClient(serviceName string, c client.Client) SortClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "sort"
	}
	return &sortClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *sortClient) InsertionSort(ctx context.Context, in *InputArray, opts ...client.CallOption) (*OutputArray, error) {
	req := c.c.NewRequest(c.serviceName, "Sort.InsertionSort", in)
	out := new(OutputArray)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sortClient) SelectionSort(ctx context.Context, in *InputArray, opts ...client.CallOption) (*OutputArray, error) {
	req := c.c.NewRequest(c.serviceName, "Sort.SelectionSort", in)
	out := new(OutputArray)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Sort service

type SortHandler interface {
	InsertionSort(context.Context, *InputArray, *OutputArray) error
	SelectionSort(context.Context, *InputArray, *OutputArray) error
}

func RegisterSortHandler(s server.Server, hdlr SortHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Sort{hdlr}, opts...))
}

type Sort struct {
	SortHandler
}

func (h *Sort) InsertionSort(ctx context.Context, in *InputArray, out *OutputArray) error {
	return h.SortHandler.InsertionSort(ctx, in, out)
}

func (h *Sort) SelectionSort(ctx context.Context, in *InputArray, out *OutputArray) error {
	return h.SortHandler.SelectionSort(ctx, in, out)
}

func init() { proto.RegisterFile("sort.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 135 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xce, 0x2f, 0x2a,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe2, 0xe2, 0xf2, 0xcc, 0x2b, 0x28, 0x2d, 0x71,
	0x2c, 0x2a, 0x4a, 0xac, 0x14, 0x12, 0xe1, 0x62, 0xcd, 0x04, 0xf1, 0x24, 0x18, 0x15, 0x98, 0x35,
	0x58, 0x83, 0x20, 0x1c, 0x25, 0x55, 0x2e, 0x6e, 0xff, 0xd2, 0x12, 0xb8, 0x22, 0x31, 0x2e, 0xb6,
	0x7c, 0x30, 0x57, 0x82, 0x09, 0xac, 0x0a, 0xca, 0x33, 0x4a, 0xe2, 0x62, 0x09, 0xce, 0x2f, 0x2a,
	0x11, 0xd2, 0xe1, 0xe2, 0xf5, 0xcc, 0x2b, 0x4e, 0x2d, 0x2a, 0xc9, 0xcc, 0xcf, 0x03, 0x0b, 0x70,
	0xeb, 0x21, 0xac, 0x90, 0xe2, 0xd1, 0x43, 0x32, 0x4b, 0x89, 0x01, 0xa4, 0x3a, 0x38, 0x35, 0x27,
	0x35, 0x99, 0x28, 0xd5, 0x49, 0x6c, 0x60, 0x57, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x45,
	0xf4, 0x69, 0x39, 0xc3, 0x00, 0x00, 0x00,
}
